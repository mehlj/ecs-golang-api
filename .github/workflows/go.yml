name: 'Test, build, and deploy golang API in ECS'

on:
  push:
    branches:
    - master
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  # test:
  #   name: Test golang API
  #   runs-on: ubuntu-22.04

  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/setup-go@v3
  #     with:
  #       go-version: '1.20'

  #   # - name: Grab go dependencies
  #   #   run: go get -u github.com/gorilla/mux github.com/mattn/go-sqlite3
    
  #   - name: Run unit tests
  #     run: go test -v api/main_test.go api/main.go api/sql.go
    
  #   # - name: Lint Dockerfile
  #   #   run: hadolint Dockerfile


  create_repo:
    name: Deploy ECR repository
    runs-on: ubuntu-22.04
    # needs: test
    defaults:
      run:
        working-directory: ./terraform
    outputs:
      REPOSITORY_URL: ${{ steps.get_repo_url.outputs.REPOSITORY_URL }}

    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - run: terraform init
    - run: terraform fmt -check
    - run: terraform plan
    - run: terraform apply -target aws_ecr_repository.ecr -target aws_iam_policy_document.ecrpolicy -target aws_ecr_repository_policy.ecrpolicy -auto-approve

    - id: get_repo_url
      run: echo "REPOSITORY_URL=$(terraform output -raw repository_url)" >> "$GITHUB_OUTPUT"


  build:
    name: Build and push image to ECR
    runs-on: ubuntu-22.04
    needs: create_repo

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{needs.create_repo.outputs.REPOSITORY_URL}}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR 
        echo $ECR_REGISTRY
        echo $ECR_REPOSITORY
        echo $IMAGE_TAG
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT